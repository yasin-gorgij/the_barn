# Generated by Django 5.2.5 on 2025-08-23 20:02

import django.core.validators
import django.db.models.deletion
import storages.backends.s3
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReadingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recommender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.CharField(blank=True, max_length=255)),
                ('edition', models.CharField(blank=True, max_length=20)),
                ('volume', models.CharField(blank=True, max_length=20)),
                (
                    'publication_year',
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1000),
                            django.core.validators.MaxValueValidator(3000),
                        ],
                    ),
                ),
                (
                    'cover_image',
                    models.ImageField(
                        blank=True, null=True, storage=storages.backends.s3.S3Storage(), upload_to='cover_images/'
                    ),
                ),
                ('has_physical_copy', models.BooleanField(default=False)),
                ('is_beta', models.BooleanField(default=False, help_text='Is the book completed or not?')),
                ('is_read', models.BooleanField(default=False, help_text='Did you finish reading this book?')),
                ('i_wish_it', models.BooleanField(default=False)),
                ('read_it_again', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('slug', models.SlugField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authors', models.ManyToManyField(blank=True, related_name='books', to='barn.author')),
                ('categories', models.ManyToManyField(blank=True, related_name='books', to='barn.category')),
                (
                    'publisher',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='books',
                        to='barn.publisher',
                    ),
                ),
                ('recommenders', models.ManyToManyField(blank=True, related_name='books', to='barn.recommender')),
                ('tags', models.ManyToManyField(blank=True, related_name='books', to='barn.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=storages.backends.s3.S3Storage(), upload_to='assets/')),
                ('file_name', models.CharField()),
                ('file_extension', models.CharField(max_length=10)),
                ('file_size', models.PositiveBigIntegerField()),
                ('file_hash', models.CharField(max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'book',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='barn.book'
                    ),
                ),
            ],
            options={
                'ordering': ['file_extension'],
            },
        ),
        migrations.CreateModel(
            name='ReadingListBooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barn.book')),
                ('reading_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='barn.readinglist')),
            ],
        ),
        migrations.AddField(
            model_name='readinglist',
            name='books',
            field=models.ManyToManyField(through='barn.ReadingListBooks', to='barn.book'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['-created_at'], name='barn_book_created_0aa303_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='barn_book_title_9f3c38_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['subtitle'], name='barn_book_subtitl_f7ceab_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['publication_year'], name='barn_book_publica_50ad35_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['is_read'], name='barn_book_is_read_72a495_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['is_beta'], name='barn_book_is_beta_7fa954_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['i_wish_it'], name='barn_book_i_wish__6375d8_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['slug'], name='barn_book_slug_59473a_idx'),
        ),
        migrations.AddConstraint(
            model_name='book',
            constraint=models.UniqueConstraint(
                fields=('title', 'subtitle', 'edition', 'volume'), name='unique_book_name'
            ),
        ),
    ]
